// Copyright (C) 2019 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "frameworks_native_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["frameworks_native_license"],
}

cc_library_headers {
    name: "libinputreader_headers",
    host_supported: true,
    export_include_dirs: [
        "controller",
        "include",
        "mapper",
        "mapper/accumulator",
        "mapper/gestures",
    ],
}

filegroup {
    name: "libinputreader_sources",
    srcs: [
        "EventHub.cpp",
        "InputDevice.cpp",
        "InputReader.cpp",
        "Macros.cpp",
        "TouchVideoDevice.cpp",
        "controller/PeripheralController.cpp",
        "mapper/CapturedTouchpadEventConverter.cpp",
        "mapper/CursorInputMapper.cpp",
        "mapper/ExternalStylusInputMapper.cpp",
        "mapper/InputMapper.cpp",
        "mapper/JoystickInputMapper.cpp",
        "mapper/KeyboardInputMapper.cpp",
        "mapper/MultiTouchInputMapper.cpp",
        "mapper/RotaryEncoderInputMapper.cpp",
        "mapper/SensorInputMapper.cpp",
        "mapper/SingleTouchInputMapper.cpp",
        "mapper/SlopController.cpp",
        "mapper/SwitchInputMapper.cpp",
        "mapper/TouchCursorInputMapperCommon.cpp",
        "mapper/TouchInputMapper.cpp",
        "mapper/TouchpadInputMapper.cpp",
        "mapper/VibratorInputMapper.cpp",
        "mapper/accumulator/CursorButtonAccumulator.cpp",
        "mapper/accumulator/CursorScrollAccumulator.cpp",
        "mapper/accumulator/HidUsageAccumulator.cpp",
        "mapper/accumulator/MultiTouchMotionAccumulator.cpp",
        "mapper/accumulator/SingleTouchMotionAccumulator.cpp",
        "mapper/accumulator/TouchButtonAccumulator.cpp",
        "mapper/gestures/GestureConverter.cpp",
        "mapper/gestures/GesturesLogging.cpp",
        "mapper/gestures/HardwareProperties.cpp",
        "mapper/gestures/HardwareStateConverter.cpp",
        "mapper/gestures/PropertyProvider.cpp",
        "mapper/gestures/TimerProvider.cpp",
    ],
}

cc_defaults {
    name: "libinputreader_defaults",
    srcs: [":libinputreader_sources"],
    shared_libs: [
        "libbase",
        "libcap",
        "libcrypto",
        "libcutils",
        "libjsoncpp",
        "libinput",
        "liblog",
        "libPlatformProperties",
        "libstatslog",
        "libutils",
    ],
    static_libs: [
        "libc++fs",
        "libchrome-gestures",
        "libui-types",
    ],
    header_libs: [
        "libbatteryservice_headers",
        "libchrome-gestures_headers",
        "libinputreader_headers",
    ],
    target: {
        android: {
            shared_libs: [
                "libstatspull",
            ],
        },
        host: {
            static_libs: [
                "libbinder",
                "libstatspull",
            ],
        },
    },
}

cc_library_static {
    name: "libinputreader_static",
    defaults: [
        "inputflinger_defaults",
        "libinputreader_defaults",
    ],
    shared_libs: [
        "libinputflinger_base",
    ],
    export_header_lib_headers: [
        "libbatteryservice_headers",
        "libchrome-gestures_headers",
        "libinputreader_headers",
    ],
    whole_static_libs: [
        "libchrome-gestures",
    ],
}

cc_library_shared {
    name: "libinputreader",
    host_supported: true,
    defaults: [
        "inputflinger_defaults",
        "libinputreader_defaults",
    ],
    srcs: [
        "InputReaderFactory.cpp",
    ],
    shared_libs: [
        // This should consist only of dependencies from inputflinger. Other dependencies should be
        // in cc_defaults so that they are included in the tests.
        "libinputflinger_base",
        "libjsoncpp",
    ],
    export_header_lib_headers: [
        "libinputreader_headers",
    ],
    target: {
        host: {
            include_dirs: [
                "bionic/libc/kernel/android/uapi/",
                "bionic/libc/kernel/uapi",
            ],
        },
    },
    static_libs: [
        "libc++fs",
        "libchrome-gestures",
    ],
}
